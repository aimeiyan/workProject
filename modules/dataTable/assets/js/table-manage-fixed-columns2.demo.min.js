var fixColum = 3;
var handleDataTableFixedColumns = function () {
        "use strict";
        //0 !== $("#data-table").length && $("#data-table").DataTable({
        var table = $("#data-table").DataTable({
            //"processing": true,
            "bServerSide": true,
            //"sAjaxSource": "assets/data/ajax.json",
            //"sServerMethod": "POST",
            //"iDisplayLength":10
            //serverSide: true,
            ajax: {
                'url': 'assets/data/ajax.json'
            },
            columns: [
                {title: '\<input type="checkbox" class="select-all"\>'},
                {title: "ID"},
                {title: "Name"},
                {title: "Position"},
                {title: "Office"},
                {title: "Extn."},
                {title: "Start date"},
                {title: "Salary"}
            ],
            //columnDefs: [{
            //    'targets': 0,
            //    'searchable': false,
            //    'orderable': false,
            //    'className': 'dt-body-center',
            //    'visible': true,
            //    'render': function (data, type, full, meta) {
            //        //console.log(meta)
            //        return '<input type="checkbox" class="select-all-chk" name="id[]" value="' + meta.row + '">';
            //    }
            //}, {
            //    'targets': 1,
            //    'orderable': false,
            //}, {
            //    'targets': 4,
            //    'orderable': false,
            //}, {
            //    'targets': 5,
            //    'orderable': false,
            //}, {
            //    'targets': 6,
            //    'orderable': false,
            //}, {
            //    'targets': 7,
            //    'orderable': false,
            //}],
            "dom": '<"toolbar">Birtp',
            buttons: [{
                text: '<i class="fa fa-server m-r-5"></i>加入权限集合',
                className: "btn-sm",
                action: function ( e, dt, node, config ) {
                    //dt.ajax.reload();
                    console.log("加入权限集合")
                }
            },{
                text: '<i class="fa fa-recycle m-r-5"></i>清除权限',
                className: "btn-sm",
                action: function ( e, dt, node, config ) {
                    //dt.ajax.reload();
                    console.log("清除权限集合")
                }
            }, {
                //extend: "excel",
                text: '导出',
                className: "btn-sm",
                action: function ( e, dt, node, config ) {
                    //dt.ajax.reload();
                    console.log("导出excel")
                }
            }, {extend: "print",text: '打印', className: "btn-sm"}],
            responsive: !0,
            scrollY: 300,
            scrollX: true,
            bPaginate: false,
            autoFill: true,
            scrollCollapse: true,
            order: [[1, 'asc']],
            oLanguage: {
                "sInfo": ' <span class="m-l-10">相关记录共<span class="text-danger"> _TOTAL_ </span>条</span>',
                //"sInfoEmpty": 'There are a total of _TOTAL_ <span class="lvllbl"></span>(s).',
                //"sEmptyTable": 'There are no <span class="lvllbl"></span>(s) to display',
                //"sZeroRecords": 'There are no matching <span class="lvllbl"></span>(s) to display',
                //"sProcessing": 'Please wait - loading <span class="lvllbl"></span> (s) ...'
            },
            fixedColumns: {
                leftColumns: fixColum
            }
        });

        table.on('page.dt', function () {
            var page_num = table.page.info().page;
            console.log(page_num, 'info-----');
            //table.ajax.reload();
            var checked = false;
            //var $chk=$(".DTFC_Cloned .select-all-chk");
            //var checked_num=[];
            //for(var i=0;i<$chk.length;i++){
            //    if($($chk[i]).is(":checked")){
            //        checked_num.push("true");
            //    }
            //}
            var $chk = $(".DTFC_Cloned .select-all-chk");
            var checked_num = [], checked = false;
            for (var i = 0; i < $chk.length; i++) {
                if ($($chk[i]).is(":checked")) {
                    checked_num.push("true");
                }
            }
            if (checked_num.length === $chk.length) {
                checked = true;
                $('.select-all').prop('checked', checked)
            } else {
                checked = false;
                $('.select-all').prop('checked', checked)
            }
            //console.log(checked_num.length, $chk.length)

            if (fixColum === 0) {
                $('.dataTables_scrollHead .select-all').each(function (idx, v) {
                    if (v.checked) {
                        checked = true;
                        $('.DTFC_Cloned tbody tr').addClass('selected');
                        $('#data-table tbody tr').addClass('selected');
                    } else {
                        checked = false;
                        $('.DTFC_Cloned tbody tr').removeClass('selected');
                        $('#data-table tbody tr').removeClass('selected');
                    }
                })
            } else {
                //if(checked_num.length===$chk.length){
                //    checked = true;
                //    $('.select-all').prop('checked',checked)
                //}else {
                //    checked = false;
                //    $('.select-all').prop('checked',checked)
                //}
                $('.select-all').each(function (idx, v) {
                    if (v.checked) {
                        checked = true;
                        $('.select-all').prop('checked', !checked)
                        //$('.DTFC_Cloned tbody tr').addClass('selected');
                        //$('#data-table tbody tr').addClass('selected');
                    }
                    //else {
                    //    checked = false;
                    //    $('.DTFC_Cloned tbody tr').removeClass('selected');
                    //    $('#data-table tbody tr').removeClass('selected');
                    //}
                })
            }


            //setTimeout(function () {
            //    $('.select-all-chk').prop('checked', checked);
            //    console.log(checked)
            //    if (checked) {
            //        $('.DTFC_Cloned tbody tr').addClass('selected');
            //        $('#data-table tbody tr').addClass('selected');
            //    } else {
            //        $('.DTFC_Cloned tbody tr').removeClass('selected');
            //        $('#data-table tbody tr').removeClass('selected');
            //    }
            //}, 0);

        });
        var $chk = $(".DTFC_Cloned .select-all-chk");
        var checked_num = [], checked = false;
        for (var i = 0; i < $chk.length; i++) {
            if ($($chk[i]).is(":checked")) {
                checked_num.push("true");
            }
        }
        if (checked_num.length === $chk.length) {
            checked = true;
            $('.select-all').prop('checked', checked)
        } else {
            checked = false;
            $('.select-all').prop('checked', checked)
        }

        /* 点击全选checkbox，将当页所有的row选中 */

        $("input.select-all").live("click", function () {
            $('.select-all-chk').prop('checked', this.checked);
            if (this.checked) {
                $('.DTFC_Cloned tbody tr').addClass('selected');
                $('#data-table tbody tr').addClass('selected');
            } else {
                $('.DTFC_Cloned tbody tr').removeClass('selected');
                $('#data-table tbody tr').removeClass('selected');
            }
        });


        $("input.select-all-chk").live("click", function () {
            var row = $(this).parent().parent();
            var rowIndex = row.index() + 1;

            if ($(this).is(":checked")) {

                /*对checked=true的row添加选中效果*/
                row.addClass("selected");
                $("#data-table tr:nth-child(" + rowIndex + ")").addClass("selected");
            } else {

                /*对checked=false的row添加选中效果，全选处于未选中状态*/
                row.removeClass("selected");
                $("#data-table tr:nth-child(" + rowIndex + ")").removeClass("selected");
                $("input.select-all").prop('checked', false);
            }

            /*Start 判断当前页面的row的数量是否与checked=true的row一致*/

            var $chk = $(".DTFC_Cloned .select-all-chk");
            var checked_num = [], checked = false;

            for (var i = 0; i < $chk.length; i++) {
                if ($($chk[i]).is(":checked")) {
                    checked_num.push("true");
                }
            }

            if (checked_num.length === $chk.length) {
                checked = true;
                $('.select-all').prop('checked', checked)
            } else {
                checked = false;
                $('.select-all').prop('checked', checked)
            }

            /*End 判断当前页面的row的数量是否与checked的row一致*/

        });
        //$("div.toolbar").html('<b>Custom tool bar! Text/images etc.</b>');
        $("div.toolbar").html('<form method="get" action="" class="hr-filter-form"><div class="hr-tree-select-wrapper"><input type="text" placeholder="选择机构" class="hr-tree-select form-control input-sm"><i class="fa fa-sort-down hr-tree-select-down f-s-16"></i></div><div class="hr-tree-select-wrapper m-l-10"><input type="text" placeholder="输入姓名或岗位" class="form-control input-sm"><i class="btn btn-default btn-sm" style="font-style: normal;">搜索</i></div></form>');

        $('.hr-filter-form :input').change(function () {
            console.log(this);
            table.ajax.reload();
            //$(this).parents('.hr-filter-form').submit();

        });

},
    TableManageFixedColumns = function () {
        "use strict";
        return {
            init: function () {
                handleDataTableFixedColumns()
            }
        }
    }();