/*   
 Template Name: Color Admin - Responsive Admin Dashboard Template build with Twitter Bootstrap 3.3.5
 Version: 1.9.0
 Author: Sean Ngu
 Website: http://www.seantheme.com/color-admin-v1.9/admin/
 */
var handleDataTableFixedColumns = function () {
        "use strict";
        //0 !== $("#data-table").length && $("#data-table").DataTable({
        var table = $("#data-table").DataTable({
            ajax: {
                'url': 'assets/data/ids-arrays.txt'
            },

            columnDefs: [{
                'targets': 0,
                'searchable': false,
                'orderable': false,
                'className': 'dt-body-center',
                'visible': true,
                'render': function (data, type, full, meta) {
                    //console.log(data,'data');
                    //return '<input type="checkbox" class="select-all-chk" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                    return '<input type="checkbox" class="select-all-chk" name="id[]" value="' + data + '">';
                }
            }],
            //'order': [[1, 'asc']],
            scrollY: 300,
            scrollX: true,
            scrollCollapse: true,
            order: [[0, 'asc']],
            fixedHeader: true
            //select: true,
            //fixedColumns: {
            //    leftColumns: 2
            //}
        });

        table.on('page.dt', function () {
            //console.log('---')

            var checked = false;
            $('input[name=select-all]').each(function (idx, v) {
                if (v.checked) {
                    checked = true;
                    $('.DTFC_Cloned tbody tr').addClass('selected');
                    $('#data-table tbody tr').addClass('selected');
                } else {
                    checked = false;
                    $('.DTFC_Cloned tbody tr').removeClass('selected');
                    $('#data-table tbody tr').removeClass('selected');
                }
            })

            setTimeout(function () {
                $('.select-all-chk').prop('checked', checked);
                if (checked) {
                    $('.DTFC_Cloned tbody tr').addClass('selected');
                    $('#data-table tbody tr').addClass('selected');
                } else {
                    $('.DTFC_Cloned tbody tr').removeClass('selected');
                    $('#data-table tbody tr').removeClass('selected');
                }
            }, 0);

            $(document).on('click', 'input.select-all-chk', function () {
                var check_value = $(this).val();
                var length = $('#data-table tbody tr').length;
                var rows_idx = (check_value - 1) % length;
                console.log(check_value, rows_idx, '=====');

                $('.DTFC_LeftBodyWrapper table tbody tr').eq(rows_idx).toggleClass('selected');
                $('#data-table tbody tr').eq(rows_idx).toggleClass('selected');
            })

        });

        // Handle click on "Select all" control

        $(document).on('click', 'input[name=select-all]', function () {
            $('.select-all-chk').prop('checked', this.checked);
            $('.DTFC_Cloned tbody tr').toggleClass('selected');
            $('#data-table tbody tr').toggleClass('selected');
        })

        //console.log($('input.select-all-chk').length,'===');
        //
        //    $('input[name=select-all-chk]').click(function(){
        //        console.log("[][][][]")
        //    })

        //var u=$(".select-all-chk").length;
        //console.log(u)

        //
        $(document).on('click', 'input.select-all-chk', function () {
            var check_value = $(this).val();
            var rows_idx = check_value - 1;
            $('.DTFC_LeftBodyWrapper table tbody tr').eq(rows_idx).toggleClass('selected');
            $('#data-table tbody tr').eq(rows_idx).toggleClass('selected');
        })


        //var rows = table.rows({'search': 'applied'}).nodes();
        ////    //console.log(rows);
        ////    // Check/uncheck checkboxes for all rows in the table
        //    $('input[type="checkbox"]', rows).prop('checked', this.checked);

//}
//)


//$('input[name=select-all]').on('click', function () {
//
//    //window.g_table = table;
//
//    console.log('all click', this.checked)
//    // Get all rows with search applied
//    //var rows = table.rows({'search': 'applied'}).nodes();
//    //console.log(rows);
//    // Check/uncheck checkboxes for all rows in the table
//    //$('input[type="checkbox"]', rows).prop('checked', this.checked);
//
//    $('.select-all-chk').prop('checked', this.checked);
//});

// Handle click on checkbox to set state of "Select all" control
//$('#data-table tbody').on('change', 'input[type="checkbox"]', function () {
//    // If checkbox is not checked
//    if (!this.checked) {
//        var el =  $('input[name=select-all]').get(0);
//        // If "Select all" control is checked and has 'indeterminate' property
//        if (el && el.checked && ('indeterminate' in el)) {
//            // Set visual state of "Select all" control
//            // as 'indeterminate'
//            el.indeterminate = true;
//        }
//    }
//});

// Handle form submission event
//$('#frm-example').on('submit', function (e) {
//    var form = this;
//
//    // Iterate over all checkboxes in the table
//    table.$('input[type="checkbox"]').each(function () {
//        // If checkbox doesn't exist in DOM
//        if (!$.contains(document, this)) {
//            // If checkbox is checked
//            if (this.checked) {
//                // Create a hidden element
//                $(form).append(
//                    $('<input>')
//                        .attr('type', 'hidden')
//                        .attr('name', this.name)
//                        .val(this.value)
//                );
//            }
//        }
//    });
//});

//0 !== $("#data-table").length && $("#data-table").DataTable({
//    'ajax': {
//        'url': 'assets/data/ids-arrays.txt'
//    },
//    'columnDefs': [{
//        'targets': 0,
//        'searchable': false,
//        'orderable': false,
//        'className': 'dt-body-center',
//        'render': function (data, type, full, meta) {
//            return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
//        }
//    }],
//    //bVisible:true,
//    scrollY: 300,
//    scrollX: true,
//    scrollCollapse: true,
//    fixedColumns: {
//        leftColumns: 3
//    },
//
//
//paging: !1,
//    //fixedColumns: !0,
//    //responsive: !0,
//    //fixedColumns: true
//});

        //table.on( 'order.dt search.dt', function () {
        //    table.column(1, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
        //        cell.innerHTML = i+1;
        //    } );
        //} ).draw();
        //var fc = new $.fn.dataTable;

        // at some later point when the table has been manipulated....
        //fc.fnUpdate();
    },
    TableManageFixedColumns = function () {
        "use strict";
        return {
            init: function () {
                handleDataTableFixedColumns()
            }
        }
    }();